//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Edges = newEdgesTable("public", "edges", "")

type edgesTable struct {
	postgres.Table

	// Columns
	ID     postgres.ColumnInteger
	Origin postgres.ColumnInteger
	Target postgres.ColumnInteger
	Cost   postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type EdgesTable struct {
	edgesTable

	EXCLUDED edgesTable
}

// AS creates new EdgesTable with assigned alias
func (a EdgesTable) AS(alias string) *EdgesTable {
	return newEdgesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EdgesTable with assigned schema name
func (a EdgesTable) FromSchema(schemaName string) *EdgesTable {
	return newEdgesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EdgesTable with assigned table prefix
func (a EdgesTable) WithPrefix(prefix string) *EdgesTable {
	return newEdgesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EdgesTable with assigned table suffix
func (a EdgesTable) WithSuffix(suffix string) *EdgesTable {
	return newEdgesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEdgesTable(schemaName, tableName, alias string) *EdgesTable {
	return &EdgesTable{
		edgesTable: newEdgesTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newEdgesTableImpl("", "excluded", ""),
	}
}

func newEdgesTableImpl(schemaName, tableName, alias string) edgesTable {
	var (
		IDColumn       = postgres.IntegerColumn("id")
		OriginColumn   = postgres.IntegerColumn("origin")
		TargetColumn   = postgres.IntegerColumn("target")
		CostColumn     = postgres.IntegerColumn("cost")
		allColumns     = postgres.ColumnList{IDColumn, OriginColumn, TargetColumn, CostColumn}
		mutableColumns = postgres.ColumnList{OriginColumn, TargetColumn, CostColumn}
		defaultColumns = postgres.ColumnList{IDColumn}
	)

	return edgesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:     IDColumn,
		Origin: OriginColumn,
		Target: TargetColumn,
		Cost:   CostColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
