//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Vertices = newVerticesTable("public", "vertices", "")

type verticesTable struct {
	postgres.Table

	// Columns
	ID postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type VerticesTable struct {
	verticesTable

	EXCLUDED verticesTable
}

// AS creates new VerticesTable with assigned alias
func (a VerticesTable) AS(alias string) *VerticesTable {
	return newVerticesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new VerticesTable with assigned schema name
func (a VerticesTable) FromSchema(schemaName string) *VerticesTable {
	return newVerticesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new VerticesTable with assigned table prefix
func (a VerticesTable) WithPrefix(prefix string) *VerticesTable {
	return newVerticesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new VerticesTable with assigned table suffix
func (a VerticesTable) WithSuffix(suffix string) *VerticesTable {
	return newVerticesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newVerticesTable(schemaName, tableName, alias string) *VerticesTable {
	return &VerticesTable{
		verticesTable: newVerticesTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newVerticesTableImpl("", "excluded", ""),
	}
}

func newVerticesTableImpl(schemaName, tableName, alias string) verticesTable {
	var (
		IDColumn       = postgres.IntegerColumn("id")
		allColumns     = postgres.ColumnList{IDColumn}
		mutableColumns = postgres.ColumnList{}
		defaultColumns = postgres.ColumnList{IDColumn}
	)

	return verticesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID: IDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
